% --------------------------------------------------------------------------- %
% Author:          Joey Dumont         <joey.dumont@gmail.com>                %
% Date created:    May 3rd, 2018                                              %
% Description:     Draw gradients and stuff in the background of cells.       %
% License:         CC0 1.0                                                    %
%                  <http://creativecommons.org/publicdomain/zero/1.0/>        %
% --------------------------------------------------------------------------- %

% --------------------- Thanks ---------------------------------------------- %
% Most of the code in this package comes from                                 %
% https://tex.stackexchange.com/questions/59227/gradient-color-in-one-cell-of-a-table
% --------------------------------------------------------------------------- %

\RequirePackage[table]{xcolor}
\RequirePackage{array}
\RequirePackage{tikz}
\RequirePackage{lipsum}
\RequirePackage{siunitx}
\usetikzlibrary{calc,shadings}


% Andrew Stacey's code from
% https://tex.stackexchange.com/a/50054/3954
\makeatletter
\tikzset{%
  remember picture with id/.style={%
    remember picture,
    overlay,
    save picture id=#1,
  },
  save picture id/.code={%
    \edef\pgf@temp{#1}%
    \immediate\write\pgfutil@auxout{%
      \noexpand\savepointas{\pgf@temp}{\pgfpictureid}}%
  },
  if picture id/.code args={#1#2#3}{%
    \@ifundefined{save@pt@#1}{%
      \pgfkeysalso{#3}%
    }{
      \pgfkeysalso{#2}%
    }
  }
}

\def\savepointas#1#2{%
  \expandafter\gdef\csname save@pt@#1\endcsname{#2}%
}

\def\tmk@labeldef#1,#2\@nil{%
  \def\tmk@label{#1}%
  \def\tmk@def{#2}%
}

\tikzdeclarecoordinatesystem{pic}{%
  \pgfutil@in@,{#1}%
  \ifpgfutil@in@%
    \tmk@labeldef#1\@nil
  \else
    \tmk@labeldef#1,(0pt,0pt)\@nil
  \fi
  \@ifundefined{save@pt@\tmk@label}{%
    \tikz@scan@one@point\pgfutil@firstofone\tmk@def
  }{%
  \pgfsys@getposition{\csname save@pt@\tmk@label\endcsname}\save@orig@pic%
  \pgfsys@getposition{\pgfpictureid}\save@this@pic%
  \pgf@process{\pgfpointorigin\save@this@pic}%
  \pgf@xa=\pgf@x
  \pgf@ya=\pgf@y
  \pgf@process{\pgfpointorigin\save@orig@pic}%
  \advance\pgf@x by -\pgf@xa
  \advance\pgf@y by -\pgf@ya
  }%
}
\newcommand\tikzmark[2][]{%
\tikz[remember picture with id=#2] {#1;}}
\makeatother
% end of Andrew's code

\newcommand\ShadeCell[4][0pt]{%
  \begin{tikzpicture}[overlay,remember picture]%
    \shade[#4] ( $ (pic cs:#2) + (0pt,2ex) $ ) rectangle ( $ (pic cs:#3) + (0pt,-#1*\baselineskip-.8ex) $ );
  \end{tikzpicture}%
}%

\newdimen\tempdim
\newcommand*{\ChartBox}[3]{%
  \begingroup
    \settoheight{\tempdim}{X}%
    \edef\tempheight{\the\tempdim}%
    \settodepth{\tempdim}{g}%
    \edef\tempdepth{\the\tempdim}%
    \begin{tikzpicture}[baseline=0pt,inner sep=0pt]
    \node[
      left color=#3,
      right color=#3!20,
      %rounded corners=1pt,
      anchor=base,
    ]{%
      \vphantom{g\"A}%
      \pgfmathsetlength{\tempdim}{#2}%
      \kern\tempdim\relax
    };%
    \node[anchor=base,text width=#2,yshift=-0.1ex]{\;\num[output-exponent-marker = \text{E},mode=text]{#1}};
    \end{tikzpicture}
  \endgroup
}

\newcommand*\chart[1]{}